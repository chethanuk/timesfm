[tool.poetry]
name = "timesfm"
version = "2.0.0"
description = "A time series foundation model."
authors = [
    "Rajat Sen <senrajat@google.com>",
    "Yichen Zhou <yichenzhou@google.com>",
    "Abhimanyu Das <abhidas@google.com>",
    "Petros Mol <pmol@google.com>",
    "Michael Chertushkin <chertushkinmichael@gmail.com>"
]
license = "Apache-2.0"
readme = "README.md"
packages = [{include = "timesfm", from = "src"}]

[tool.poetry.dependencies]
python = ">=3.11"
numpy = ">=1.26.4"
huggingface_hub = { version = ">=0.23.0", extras = ["cli"] }
safetensors = ">=0.5.3"
torch = { version = ">=2.0.0", extras = ["cuda"] }
pandas = ">=2.0.0"
scikit-learn = ">=1.3.0"

[tool.poetry.group.dev.dependencies]
pytest = ">=7.4.0"
pytest-asyncio = ">=0.21.0"
pytest-cov = ">=4.1.0"
pytest-benchmark = ">=4.0.0"
pytest-mock = ">=3.11.0"
pytest-xdist = ">=3.3.0"
aioresponses = ">=0.7.0"
aiosqlite = ">=0.19.0"
psutil = ">=5.9.0"
memory-profiler = ">=0.61.0"
redis = ">=4.6.0"
fastapi = ">=0.104.0"
httpx = ">=0.25.0"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-v",
    "--tb=short",
    "--strict-markers",
    "--strict-config",
    "--cov=src/timesfm",
    "--cov-report=term-missing",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80",
]
asyncio_mode = "auto"
markers = [
    "unit: Unit tests for individual components",
    "integration: Integration tests for API endpoints",
    "performance: Performance and load tests",
    "slow: Tests that take a long time to run",
    "async: Tests that use async functionality",
    "api: Tests for API endpoints",
    "model: Tests for model functionality",
]
filterwarnings = [
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
    "ignore::UserWarning",
]

[tool.coverage.run]
source = ["src/timesfm"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__init__.py",
    "*/conftest.py",
    "*/migrations/*",
    "*/scripts/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "if TYPE_CHECKING:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"

[tool.ruff]
line-length = 88
indent-width = 2


[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

